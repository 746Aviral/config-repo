
spring:
  application:
    name: account-service

  devtools:
    restart:
      poll-interval: 2s
      quiet-period: 1s

  # kafka:
  #   bootstrap-servers: ${KAFKA_SERVICE:localhost:9092}
  #   consumer:
  #     group-id: account-group
  #     auto-offset-reset: earliest
  #     enable-auto-commit: false
  #     key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #     value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  #     properties:
  #       spring.json.trusted.packages: "com.blueyonder.bankingapp.model"
  #   producer:
  #     key-serializer: org.apache.kafka.common.serialization.StringSerializer
  #     value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  kafka:
    bootstrap-servers: ${KAFKA_SERVICE:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    # consumer:
    #   group-id: account-group
    #   key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #   value-deserializer: org.apache.kafka.common.serialization.StringDeserializer  

  datasource:
    url: jdbc:postgresql://${POSTGRES_SERVICE:localhost}:5432/capstone
    username: postgres
    password: postgres

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true



debug: true

logging:
  level:
    org.apache.kafka: DEBUG
    org.hibernate.SQL: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${REGISTRY_SERVICE:localhost}:8761/eureka/
  instance:
    prefer-ip-address: true


server:
  port: 7079
